// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  isBlocked Boolean  @default(false)
  role      UserRole @default(USER)
  accounts   Account[]
}

model Account {
  id        Int      @id @default(autoincrement())
  balance   Decimal
  currency  Currency
  isActive  Boolean
  createdAt DateTime @default(now())
  userId    Int      
  deposits   AccountDeposit[]
  user      User     @relation(fields: [userId], references: [id])
}

model Deposit {
  id        Int      @id @default(autoincrement())
  name String @unique()
  interest Float
  term Int
  isActive Boolean @default(true)
  currency Currency

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts AccountDeposit[]
}

model AccountDeposit {
  id         Int          @id @default(autoincrement())
  accountId     Int
  depositId  Int
  startDate  DateTime @default(now())
  amount Decimal
  personalInterest Decimal?

  account       Account         @relation(fields: [accountId], references: [id])
  deposit    Deposit      @relation(fields: [depositId], references: [id])
}

model Transaction {
  id              Int              @id @default(autoincrement())
  accountId       Int
  currency        Currency
  amount          Decimal
  date            DateTime         @default(now())
  targetAccountId Int?
  type            TransactionsType
}

enum TransactionsType {
  DEPOSIT
  WITHDRAWAL
  TRANSFER
}

enum UserRole {
  USER
  ADMIN
}

enum Currency {
  USD
  UAH
  EUR
}
